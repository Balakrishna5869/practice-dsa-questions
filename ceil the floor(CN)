int getFloor(vector<int> &a, int n, int x){
	int i = 0;
    int j = n-1;
	int ans = -1;
	while(i <= j){
		int mid = i + (j-i)/2;

		if(a[mid] == x){
			ans = a[mid];
			return ans;
		}
		else if(a[mid] < x){
			ans = a[mid];
			i = mid + 1;
		}
		else{
			j = mid - 1;
		}
	}
	return ans;
}
int getCeil(vector<int> &a, int n, int x){
	int i = 0;
    int j = n-1;
	int ans = -1;
	while(i <= j){
		int mid = i + (j-i)/2;

		if(a[mid] == x){
			ans = a[mid];
			return ans;
		}
		else if(a[mid] < x){
			i = mid + 1;
		}
		else{
			ans = a[mid];
			j = mid - 1;
		}
	}
	return ans;
}

pair<int, int> getFloorAndCeil(vector<int> &a, int n, int x) {
	// Write your code here.
	int ans1 = getFloor(a,n,x);
	int ans2 = getCeil(a,n,x);
	pair<int,int>p;
	p.first = ans1;
	p.second = ans2;
	return p;

}
